#!/bin/sh
#
# Copyright (C) 2021-2022 Sing Yu Chan <i@pexcn.me>
#
# The design idea was derived from ss-rules by Jian Chang <aa65535@live.com> and Yousong Zhou <yszhou4tech@gmail.com>
#
# This is free software, licensed under the GNU General Public License v3.
# See /LICENSE for more information.
#

# code compatibility
alias ip="ip -6"
alias iptables=ip6tables
alias iptables-save=ip6tables-save
alias iptables-restore=ip6tables-restore

TRANSPROXY_VERSION=0.2.1

SRC_DIRECT=transproxy6_src_direct
SRC_PROXY=transproxy6_src_proxy
SRC_NORMAL=transproxy6_src_normal
DST_DIRECT=transproxy6_dst_direct
DST_PROXY=transproxy6_dst_proxy
DST_SPECIAL=transproxy6_dst_special

_print_usage() {
  # TODO
  cat << EOF
transproxy $TRANSPROXY_VERSION
A bridge of linux and transparent proxy.

USAGE:
    ${0##*/} [OPTIONS]

OPTIONS:
    -f, --flush    Flush iptables, ipset then exit
    -h, --help     Show this help message then exit
EOF
}

_add_prefix() {
  sed "s/^/$1/"
}

_remove_empty() {
  sed '/^[[:space:]]*$/d'
}

_remove_comment() {
  sed '/^#/ d'
}

_split_by_space() {
  [ -n "$1" ] || return 0
  echo "$1" | tr ',' ' '
}

_splice_content() {
  [ -n "$1" ] || return 0
  for file in $(_split_by_space "$1"); do cat $file; done
}

_apply_sysctl() {
  [ $(sysctl -n "$1") = "$2" ] || sysctl -w "$1"="$2"
}

_get_reserved_ip() {
  # TODO: review needed
  cat <<- EOF
	::/127
	::ffff:0:0/96
	::ffff:0:0:0/96
	64:ff9b::/96
	100::/64
	2001::/32
	2001:20::/28
	2001:db8::/32
	2002::/16
	fc00::/7
	fe80::/10
	ff00::/8
	EOF
}

_get_special_ip() {
  echo $SERVERS | tr ',' '\n' | grep -Ev "\b([0-9]{1,3}\.){3}[0-9]{1,3}\b"
  ip route get 2001:4860:4860::8888 | sed 's/^.*src \([^ ]*\).*$/\1/;q'
}

_get_time() {
  date '+%Y-%m-%d %T'
}

debug() {
  [ "$DEBUG" = 1 ] || return 0
  local time=$(_get_time)
  printf "[${time}] [DEBUG]: %s\n" "$*"
}

info() {
  local green='\e[0;32m'
  local clear='\e[0m'
  local time=$(_get_time)
  printf "${green}[${time}] [INFO]: ${clear}%s\n" "$*"
}

warn() {
  local yellow='\e[1;33m'
  local clear='\e[0m'
  local time=$(_get_time)
  printf "${yellow}[${time}] [WARN]: ${clear}%s\n" "$*" >&2
}

error() {
  local red='\e[0;31m'
  local clear='\e[0m'
  local time=$(_get_time)
  printf "${red}[${time}] [ERROR]: ${clear}%s\n" "$*" >&2
}

generate_ipset_rules() {
  _splice_content $SRC_DIRECT_FILES | _remove_empty | _remove_comment | _add_prefix "add $SRC_DIRECT "
  _splice_content $SRC_PROXY_FILES | _remove_empty | _remove_comment | _add_prefix "add $SRC_PROXY "
  _splice_content $SRC_NORMAL_FILES | _remove_empty | _remove_comment | _add_prefix "add $SRC_NORMAL "
  _splice_content $DST_DIRECT_FILES | _remove_empty | _remove_comment | _add_prefix "add $DST_DIRECT "
  _splice_content $DST_PROXY_FILES | _remove_empty | _remove_comment | _add_prefix "add $DST_PROXY "
  _get_reserved_ip | _remove_empty | _remove_comment | _add_prefix "add $DST_SPECIAL "
  _get_special_ip | _remove_empty | _remove_comment | _add_prefix "add $DST_SPECIAL "
}

create_transproxy_chain() {
  iptables-restore -n <<- EOF
	*mangle

	:TRANSPROXY_SRC_PREPARE - [0:0]
	:TRANSPROXY_SRC_AC - [0:0]
	:TRANSPROXY_DST_AC - [0:0]
	:TRANSPROXY_DST_FORWARD - [0:0]

	# PREPARE
	-A TRANSPROXY_SRC_PREPARE -m set --match-set $DST_SPECIAL dst -j RETURN
	-A TRANSPROXY_SRC_PREPARE $IPT_EXTRAS -j TRANSPROXY_SRC_AC

	# SRC
	-A TRANSPROXY_SRC_AC -m set --match-set $SRC_DIRECT src -j RETURN
	-A TRANSPROXY_SRC_AC -m set --match-set $SRC_PROXY src -j TRANSPROXY_DST_FORWARD
	-A TRANSPROXY_SRC_AC -m set --match-set $SRC_NORMAL src -j TRANSPROXY_DST_AC
	-A TRANSPROXY_SRC_AC -j $SRC_DEFAULT

	# DST
	-A TRANSPROXY_DST_AC -m set --match-set $DST_DIRECT dst -j RETURN
	-A TRANSPROXY_DST_AC -m set --match-set $DST_PROXY dst -j TRANSPROXY_DST_FORWARD
	-A TRANSPROXY_DST_AC -j $DST_DEFAULT

	# TPROXY
	-A TRANSPROXY_DST_FORWARD -p tcp -j TPROXY --on-ip ::1 --on-port $TCP_PORT --tproxy-mark 1
	-A TRANSPROXY_DST_FORWARD -p udp -j TPROXY --on-ip ::1 --on-port $UDP_PORT --tproxy-mark 1

	COMMIT
	EOF
}

apply_transproxy_rules() {
  if [ -z "$INTERFACES" ]; then
    iptables -t mangle -I PREROUTING 1 -j TRANSPROXY_SRC_PREPARE
  else
    for interface in $(_split_by_space $INTERFACES); do
      iptables -t mangle -I PREROUTING 1 -i $interface -j TRANSPROXY_SRC_PREPARE
    done
  fi
}

apply_self_proxy_rules() {
  iptables -t mangle -N TRANSPROXY_DST_PREPARE
  iptables -t mangle -A TRANSPROXY_DST_PREPARE -m set --match-set $DST_SPECIAL dst -j RETURN

  # negate matching in non-[DIRECT|PROXY] mode
  [ "$DST_DEFAULT" = "RETURN" ] || iptables -t mangle -A TRANSPROXY_DST_PREPARE -m set --match-set $DST_DIRECT dst -j RETURN
  [ "$DST_DEFAULT" = "TRANSPROXY_DST_FORWARD" ] || iptables -t mangle -A TRANSPROXY_DST_PREPARE $IPT_EXTRAS -m set --match-set $DST_PROXY dst -j MARK --set-mark 1

  # avoid traffic loopback issues, reference: https://github.com/v2ray/v2ray-core/issues/2621
  [ -z "$MATCH_MARK" ] || iptables -t mangle -A TRANSPROXY_DST_PREPARE -m mark --mark $MATCH_MARK -j RETURN

  # only makes sense in non-DIRECT mode
  if [ "$DST_DEFAULT" != "RETURN" ]; then
    iptables -t mangle -A TRANSPROXY_DST_PREPARE $IPT_EXTRAS -p tcp -j MARK --set-mark 1
    iptables -t mangle -A TRANSPROXY_DST_PREPARE $IPT_EXTRAS -p udp -j MARK --set-mark 1
  fi

  iptables -t mangle -I OUTPUT 1 -j TRANSPROXY_DST_PREPARE
}

prepare_environment() {
  # check environment
  modinfo xt_TPROXY &>/dev/null || { error "xt_TPROXY kernel module is not supported."; exit 1; }
  command -v ip >/dev/null || { error "ip command not found."; exit 1; }
  command -v ipset >/dev/null || { error "ipset command not found."; exit 1; }
  command -v ip6tables >/dev/null || { error "ip6tables command not found."; exit 1; }

  # fix environment, reference: https://nobb.site/2022/02/18/0x72/
  _apply_sysctl net.bridge.bridge-nf-call-ip6tables 0
  warn "TPROXY requires net.bridge.bridge-nf-call-ip6tables=0, applied."
}

flush_rules() {
  iptables-save --counters | grep -v "TRANSPROXY_" | iptables-restore --counters
  info "iptables rules flushed."

  ip rule del fwmark 1 lookup 100 2>/dev/null
  ip route del local default dev lo table 100 2>/dev/null
  ip route flush table 100 2>/dev/null
  info "strategy route removed."

  for name in $(ipset -n list | grep "transproxy6_"); do
    ipset flush $name 2>/dev/null
    ipset destroy $name 2>/dev/null
    debug "ipset $name destroyed."
  done
  info "ipsets destroyed".
}

init_ipset() {
  ipset -exist restore <<- EOF
	create $SRC_DIRECT hash:ip hashsize 64 family inet6
	create $SRC_PROXY hash:ip hashsize 64 family inet6
	create $SRC_NORMAL hash:ip hashsize 64 family inet6
	create $DST_DIRECT hash:net hashsize 64 family inet6
	create $DST_PROXY hash:net hashsize 64 family inet6
	create $DST_SPECIAL hash:net hashsize 64 family inet6
	$(generate_ipset_rules)
	EOF
}

init_route() {
  ip rule add fwmark 1 lookup 100
  ip route add local default dev lo table 100
}

init_iptables() {
  # create common transproxy chain for mangle table, it's required for both tcp and udp.
  create_transproxy_chain
  # jump in from PREROUTING chain, make it works.
  apply_transproxy_rules
  [ -z "$SELF_PROXY" ] || apply_self_proxy_rules
}

parse_args() {
  SRC_DEFAULT=TRANSPROXY_DST_AC
  DST_DEFAULT=TRANSPROXY_DST_FORWARD

  while [ "$#" -gt 0 ]; do
    case "$1" in
      -t|--tcp-port)
        TCP_PORT="$2"
        UDP_PORT="${UDP_PORT:-$TCP_PORT}"
        shift 2
        ;;
      -u|--udp-port)
        UDP_PORT="$2"
        shift 2
        ;;
      -s|--server)
        SERVERS="$2"
        shift 2
        ;;
      --src-direct)
        SRC_DIRECT_FILES="$2"
        shift 2
        ;;
      --src-proxy)
        SRC_PROXY_FILES="$2"
        shift 2
        ;;
      --src-normal)
        SRC_NORMAL_FILES="$2"
        shift 2
        ;;
      --dst-direct)
        DST_DIRECT_FILES="$2"
        shift 2
        ;;
      --dst-proxy)
        DST_PROXY_FILES="$2"
        shift 2
        ;;
      --src-default)
        case "$2" in
          direct|DIRECT) SRC_DEFAULT=RETURN;;
          proxy|PROXY) SRC_DEFAULT=TRANSPROXY_DST_FORWARD;;
          normal|NORMAL) SRC_DEFAULT=TRANSPROXY_DST_AC;;
          *) error "wrong option: $1 $2"; exit 2;;
        esac
        shift 2
        ;;
      --dst-default)
        case "$2" in
          direct|DIRECT) DST_DEFAULT=RETURN;;
          proxy|PROXY) DST_DEFAULT=TRANSPROXY_DST_FORWARD;;
          *) error "wrong option: $1 $2"; exit 2;;
        esac
        shift 2
        ;;
      --self-proxy)
        SELF_PROXY=1;
        shift 1
        ;;
      -e|--extra)
        IPT_EXTRAS="$2"
        shift 2
        ;;
      -m|--mark)
        MATCH_MARK="$2"
        shift 2
        ;;
      -v|--verbose)
        DEBUG=1
        shift 1
        ;;
      -f|--flush)
        #prepare_env...
        flush_rules
        exit 0
        ;;
      -h|--help)
        _print_usage
        exit 0
        ;;
      *)
        error "unknown option: $1"
        exit 2
        ;;
    esac
  done
}

parse_args "$@"
prepare_environment
flush_rules
init_ipset
init_route
init_iptables
